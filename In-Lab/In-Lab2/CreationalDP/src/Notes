=>	Develop a game application with multiple levels and varying difficulty settings. Implement the following design patterns to manage different aspects of the game:
Singleton Pattern: Use this pattern to manage the game state, ensuring that there is only one instance of the game state throughout the application.
Factory Method Pattern: Apply this pattern to create different types of enemies for each level.
Abstract Factory Pattern: Utilize this pattern to create various types of weapons and power-ups based on the level and difficulty settings.
Ensure that the design of your game is flexible and can easily accommodate new levels, enemies, weapons, and power-ups in the future.

Game Application with Multiple Levels and Varying Difficulty Settings
---------------------------------------------------------------------
To develop a game application with multiple levels and varying difficulty settings, we will use the Singleton, Factory Method, and Abstract Factory design patterns to manage different aspects of the game. This ensures flexibility and easy accommodation of new levels, enemies, weapons, and power-ups in the future.

1. Singleton Pattern: Manage the Game State
----------------------------------------------
The Singleton pattern ensures that there is only one instance of the game state throughout the application.

2. Factory Method Pattern: Create Different Types of Enemies
-------------------------------------------------------------
The Factory Method pattern is used to create different types of enemies for each level.

 Abstract Factory Pattern: Create Various Types of Weapons and Power-Ups
 ------------------------------------------------------------------------
The Abstract Factory pattern is used to create various types of weapons and power-ups based on the level and difficulty settings.

Main Class to Demonstrate the Application
------------------------------------------

Explanation:
------------
Singleton Pattern:
-----------------

Ensures only one instance of the game state (GameState class) exists, managing the current level, score, and difficulty.

Factory Method Pattern:
----------------------
Creates different types of enemies (Zombie and Vampire) using specific factories (ZombieFactory and VampireFactory).

Abstract Factory Pattern:
------------------------

Creates different types of weapons (Sword and Gun) and power-ups (HealthPack and Shield) based on the level and difficulty settings using specific factories (EasyLevelFactory and HardLevelFactory).
This design ensures flexibility, scalability, and maintainability, making it easy to add new levels, enemies, weapons, and power-ups in the future.
