Def:
Observer pattern is used when there is one-to-many relationship between objects 
such as if one object is modified, its depenedent objects are to be notified automatically. 

Observer pattern falls under behavioral pattern category.

Example:
Observer pattern uses three actor classes. (Subject, Observer and Client.)

Subject is an object having methods to attach and detach observers to a client object. 

We have created an abstract class Observer and a concrete class Subject that is 
extending class Observer.

ObserverPatternDemo, our demo class, will use Subject and concrete class object 
to show observer pattern in action.

Refer: Image in SRC Folder

Steps: 
1. Create Observer Class (Observer.java)
2. Create Subject Class (Subject.java)
3. Create Concrete Observer classes (BinaryObserver.java, OctalObserver.java, HexaObserver.java)
4. User Subject and Concrete observer object in Main Demo class (ObserverPatternDemo.java)

