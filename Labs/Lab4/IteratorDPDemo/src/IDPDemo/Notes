


Iterator pattern is very commonly used design pattern in Java.

 This pattern is used to get a way to access the elements of a collection object in sequential manner without any need to know its underlying representation.

Iterator pattern falls under behavioral pattern category.

Example:

We're going to create a Iterator interface which narrates navigation method and a Container interface which retruns the iterator.

Concrete classes implementing the Container interface will be responsible to implement Iterator interface and use it

NamesRepository is a concrete class implementation to print a Names stored as a collection in NamesRepository.

IteratorPatternDemo, our demo class will use NamesRepository.

Steps:
1. Create Interfaces (Iterator.java & COntainer.Java)
2. Create concrete class implementing the Container interface. This class has inner class NameIterator implementing the Iterator interface. (NameRepository.java)
3. Use the NameRepository to get iterator and print names. (IteratorPatternDemo.java)